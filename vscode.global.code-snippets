{
	// JS TS
	"import": {
		"scope": "javascript,javascriptreact,typescript,typescriptreact",
		"prefix": "im",
		"body": [
			"import { $2 } from '$1'"
		]
	},
	"export": {
		"scope": "javascript,javascriptreact,typescript,typescriptreact",
		"prefix": "ex",
		"body": [
			"export function $1($2) {",
			"  $3",
			"}"
		]
	},
	"export default": {
		"scope": "javascript,typescript",
		"prefix": "exd",
		"body": [
			"export default function $1($2) {",
			"  $3",
			"}"
		]
	},
	"export async": {
		"scope": "javascript,javascriptreact,typescript,typescriptreact",
		"prefix": "exa",
		"body": [
			"export async function $1($2) {",
			"  $3",
			"}"
		]
	},
	// REACT
	"export default component": {
		"scope": "javascriptreact,typescriptreact",
		"prefix": "exd",
		"body": [
			"export default function ${TM_FILENAME_BASE/[^a-zA-Z0-9]*([a-zA-Z0-9])([a-zA-Z0-9]*)/${1:/capitalize}${2}/g}() {",
			" return (",
			"  <div>",
			"    <h1>Unknown Route</h1>",
			"  </div>",
			" )",
			"}",
		]
	},
	"react useState": {
		"scope": "javascript,javascriptreact,typescript,typescriptreact",
		"prefix": [
			"us",
			"use",
			"usestate"
		],
		"body": [
			"const [$1, set${1/(.)/${1:/upcase}/}] = useState($2)",
		]
	},
	// REMIX
	"remix loader": {
		"scope": "typescriptreact",
		"prefix": [
			"lo",
			"loa"
		],
		"body": [
			"export async function loader({ params }: LoaderFunctionArgs) {",
			"  $1",
			"}"
		]
	},
	"remix action": {
		"scope": "typescriptreact",
		"prefix": [
			"ac",
			"act"
		],
		"body": [
			"export async function action({ params }: ActionFunctionArgs) {",
			"  $1",
			"}"
		]
	},
	"remix loader data": {
		"scope": "typescriptreact",
		"prefix": [
			"useloaderdata",
			"usel"
		],
		"body": [
			"const { $1 } = useLoaderData<typeof loader>()"
		],
	},
	"remix navigate": {
		"scope": "typescriptreact",
		"prefix": [
			"usenavigate",
			"usen"
		],
		"body": [
			"const navigate = useNavigate()"
		],
	},
	"remix navigation": {
		"scope": "typescriptreact",
		"prefix": [
			"usenavigation",
			"usen"
		],
		"body": [
			"const navigation = useNavigation()"
		],
	},
	"remix submit": {
		"scope": "typescriptreact",
		"prefix": [
			"usesubmit",
			"uses"
		],
		"body": [
			"const submit = useSubmit()"
		],
	},
	"remix meta": {
		"scope": "typescriptreact",
		"prefix": [
			"meta",
		],
		"body": [
			"export const meta: MetaFunction = () => [{ title: 'Remix' }]"
		],
	},
	"remix links": {
		"scope": "typescriptreact",
		"prefix": [
			"links",
		],
		"body": [
			"export const links: LinksFunction = () => [{ rel: 'stylesheet', href: stylesheet }]"
		],
	},
	// CSS
	"tailwind center": {
		"scope": "javascript,javascriptreact,typescript,typescriptreact",
		"prefix": "fc",
		"body": [
			"flex items-center justify-center"
		]
	},
	"css center": {
		"scope": "css",
		"prefix": "fc",
		"body": [
			"display: flex;",
			"align-items: center;",
			"justify-content: center;"
		]
	}
}
